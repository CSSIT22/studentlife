name: üëæ Deployment Production-front(‚î¨‚î¨Ôπè‚î¨‚î¨)

on:
  push:
    branches:
      - infra-*
      - main
    paths:
      - "frontend/**"

jobs:
  frontend-build:
    name: üê≥ Build React.js Frontend
    runs-on: [self-hosted, linux, x64]
    timeout-minutes: 5
    container: node:16-alpine
    environment: develop
    steps:
      - name: üé§ Checkout
        uses: actions/checkout@v2

      - name: ‚åö Compile React.js production build
        run: |
          cd ./frontend
          npm i
          touch .env
          echo '${{secrets.FRONTEND_PRODUCTION_ENV}}' > .env
          npm run build
      - name: üÜô Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: p-frontend-build-artifact
          path: ./frontend/dist
  upload:
    name: üç± Preview Server Uploading
    runs-on: [self-hosted, linux, x64]
    timeout-minutes: 2
    container: alpine
    needs: [frontend-build]
    steps:
      - name: üì• Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: .
      - name: Deploy to server
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          username: ${{secrets.FRONT_SSH_USERNAME}}
          server: ${{secrets.FRONT_SSH_HOST}}
          password: ${{ secrets.PRODUCTION_SSH_PASSWORD}}
          port: ${{secrets.FRONT_SSH_PORT}}
          local_path: "./p-frontend-build-artifact/*"
          remote_path: "/home/sharegun34/production/front/web"
          args: "-o ConnectTimeout=5"
  # upload:
  #   name: üç± Preview Server Uploading
  #   runs-on: [self-hosted, linux, x64]
  #   environment: develop
  #   timeout-minutes: 2
  #   container: alpine
  #   needs: [frontend-build]
  #   env:
  #     REMOTE_SFTP_LOGIN: ${{ secrets.REMOTE_SFTP_PRODUCTION }}
  #     MIRROR_DIST: ${{ secrets.MIRROR_DIST }}
  #   steps:
  #     - name: üì• Download artifacts
  #       uses: actions/download-artifact@v2
  #       with:
  #         path: .

  #     - name: Install packages
  #       run: |
  #         apk add openssh-client sshpass lftp
  #     - name: üñ®Ô∏è Upload artifacts to server
  #       run: |
  #         lftp -e "set sftp:auto-confirm yes; open $REMOTE_SFTP_LOGIN; $MIRROR_DIST; bye"
